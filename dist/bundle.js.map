{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://loancalculator/./source/fastLoanCalculator.ts","webpack://loancalculator/./source/config.ts","webpack://loancalculator/./source/consumerListBox.ts","webpack://loancalculator/./source/consumerLoan.ts","webpack://loancalculator/./source/fastLoan.ts","webpack://loancalculator/./source/housingLoan.ts","webpack://loancalculator/./source/interestList.ts","webpack://loancalculator/./source/loan.ts","webpack://loancalculator/./source/loanInfoTable.ts","webpack://loancalculator/./source/loanTable.ts","webpack://loancalculator/webpack/bootstrap","webpack://loancalculator/./source/housingLoanCalculator.ts","webpack://loancalculator/./source/consumerLoanCalculator.ts"],"sourcesContent":["\r\nimport FastLoan from \"./fastLoan\";\r\n\r\nconst btn = document.getElementById('btnReadValues');\r\nbtn?.addEventListener(\"click\", countFastLoan);\r\n\r\nexport function countFastLoan() {\r\n\r\n   const loanAmount = (<HTMLInputElement>document.getElementById('loanAmount')).value;\r\n   const loanTerm = (<HTMLInputElement>document.getElementById('loanTerm')).value;\r\n   const dataFastLoan = new FastLoan(Number(loanAmount), Number(loanTerm));\r\n   if (dataFastLoan.isValid()) {\r\n      dataFastLoan.removeTableIfExsist();\r\n      dataFastLoan.createLoanInfo();\r\n      dataFastLoan.createPaymentTable();\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const CONSUMER_LOAN_LIMIT = 10000;\r\nconst CONSUMER_LOAN_DURATION = 60;\r\nconst FAST_LOAN_LIMIT = 5000;\r\nconst FAST_LOAN_DURATION = 24;\r\nconst HOUSING_LOAN_DURATION = 360;\r\nconst HOUSING_MIN_SALARY_PERC = 0.4;\r\nconst HOUSING_LOAN_PERC = 2;\r\nconst FAST_LOAN_PERC = 20;\r\nconst EMPTY_FIELD = 0;\r\nconst NEGATIVE_VALUE = 0;\r\nconst MONTHS_PER_YEAR = 12;\r\nconst TOTAL_PERCENTAGE = 100;\r\nconst DECIMAL_PALCES = 2;\r\n\r\nexport const config: { [key: string]: number } = {\r\n    consumerLoanAmountLimit: CONSUMER_LOAN_LIMIT,\r\n    consumerLoanDurationLimit: CONSUMER_LOAN_DURATION,\r\n    fastLoanAmountLimit: FAST_LOAN_LIMIT,\r\n    fastLoanDurationLimit: FAST_LOAN_DURATION,\r\n    housingLoanDurationLimit: HOUSING_LOAN_DURATION,\r\n    housingMinSalaryPerc: HOUSING_MIN_SALARY_PERC,\r\n    housingLoanPerc: HOUSING_LOAN_PERC,\r\n    fastLoanPerc: FAST_LOAN_PERC,\r\n    emptyField: EMPTY_FIELD,\r\n    negativeValue: NEGATIVE_VALUE,\r\n    monthsPerYear: MONTHS_PER_YEAR,\r\n    totalPercentage: TOTAL_PERCENTAGE,\r\n    decimalPlaces: DECIMAL_PALCES\r\n};","import { interestList } from \"./interestList\";\r\n\r\nexport function  loadConsumerListBoxItems():void {\r\n    const loanList = (<HTMLInputElement>document.getElementById('loanType'));\r\n    const defaultOption = document.createElement('OPTION');\r\n    defaultOption.innerHTML = 'Select loan type';\r\n    loanList.appendChild(defaultOption);\r\n    for (const key in interestList) {\r\n        const defaultOption = document.createElement('OPTION');\r\n        defaultOption.innerHTML = `${key}`;\r\n        loanList.appendChild(defaultOption);\r\n    }\r\n}","import Loan from \"./loan\";\r\nimport { config } from \"./config\";\r\n\r\nexport default class ConsumerLoan extends Loan {\r\n    loanAmount: number;\r\n    loanDuration: number;\r\n    interest: number;\r\n\r\n\r\n\r\n    constructor(loanAmount: number, loanDuration: number, interest: number) {\r\n        super(loanAmount, loanDuration, interest);\r\n        this.interest = interest;\r\n    }\r\n\r\n    isValid() {\r\n        if (this.interest == undefined || this.loanAmount > config.consumerLoanAmountLimit || this.loanAmount < config.negativeValue || this.loanDuration > config.consumerLoanDurationLimit || this.loanAmount == config.emptyField || this.loanDuration == config.emptyField) {\r\n            alert(\"Please correct entered data\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import Loan from \"./loan\";\r\nimport { config } from \"./config\";\r\n\r\nexport default class FastLoan extends Loan {\r\n    loanAmount: number;\r\n    loanDuration: number;\r\n    interest: number;\r\n\r\n    constructor(loanAmount: number, loanDuration: number, interest = config.fastLoanPerc) {\r\n        super(loanAmount, loanDuration, interest);\r\n\r\n    }\r\n    isValid() {\r\n        if (this.loanAmount > config.fastLoanAmountLimit || this.loanDuration > config.fastLoanDurationLimit || this.loanAmount == config.emptyField || this.loanDuration == config.emptyField) {\r\n            alert(\"Please correct entered data\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n","import { config } from \"./config\";\r\nimport Loan from \"./loan\";\r\n\r\nexport default class HousingLoan extends Loan {\r\n    loanAmount: number;\r\n    loanDuration: number;\r\n    interest: number;\r\n\r\n    constructor(loanAmount: number, loanDuration: number, interest = config.housingLoanPerc) {\r\n        super(loanAmount, loanDuration, interest);\r\n        this.interest = interest;\r\n    }\r\n\r\n    countMaxLoanAmount(numberOfMembers: number, salary: number) {\r\n        const maxInterestAmount = salary / numberOfMembers * config.housingMinSalaryPerc;\r\n        return maxInterestAmount;\r\n    }\r\n\r\n    isValid(salary: number, numberOfMembers: number) {\r\n        if (this.loanAmount <= config.negativeValue || this.loanDuration > config.housingLoanDurationLimit || this.loanDuration == config.emptyField || salary == config.emptyField || numberOfMembers == config.emptyField) {\r\n            alert(\"Please correct entered data\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isExpectationOk(maxMonthPayment: number, monthPayment: number) {\r\n        if (maxMonthPayment < monthPayment) {\r\n            alert(\"Your income is insufficient. Choose another period and loan amount\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n}\r\n","export const interestList: { [key: string]: number } = {\r\n    'Car loan': 7,\r\n    'Electric equipment loan': 10,\r\n    'House renovation loan': 5\r\n};","import { config } from \"./config\";\r\nimport { LoanCalculator } from \"./loanCalculator\";\r\nimport { removeTableIfExsist, createPaymentTable } from \"./loanTable\";\r\nimport { createLoanInfo } from \"./loanInfoTable\";\r\n\r\nexport default abstract class Loan implements LoanCalculator {\r\n    loanAmount: number;\r\n    loanDuration: number;\r\n    interest: number;\r\n    percentPerMonth: number;\r\n    power: number;\r\n\r\n    constructor(loanSize: number, loanDuration: number, interest: number) {\r\n        this.loanAmount = loanSize;\r\n        this.loanDuration = loanDuration;\r\n        this.interest = interest;\r\n        this.percentPerMonth = this.interest / config.totalPercentage / config.monthsPerYear;\r\n        this.power = Math.pow(1 + this.percentPerMonth, this.loanDuration);\r\n    }\r\n\r\n    countMonthPayment(): number {\r\n        const monthPayment = (this.loanAmount * this.percentPerMonth * this.power) / (this.power - 1);\r\n        return monthPayment;\r\n    }\r\n\r\n    countTotalPayment(monthPayment: number): number {\r\n        const totalPayment = monthPayment * this.loanDuration;\r\n        return totalPayment;\r\n    }\r\n\r\n    countTotalInterest(totalPayment: number): number {\r\n        const totalInterest = totalPayment - this.loanAmount;\r\n        return totalInterest;\r\n    }\r\n\r\n    countRemainingBalance(paymentNumber: number): number {\r\n        const power1 = Math.pow(1 + this.percentPerMonth, paymentNumber);\r\n        const remainingBlance = (this.loanAmount * (this.power - power1)) / (this.power - 1);\r\n        return remainingBlance;\r\n    }\r\n\r\n    countInterestAmount(remainingBalance: number, previuosRemainingBalance: number): number {\r\n        const interestAmount = remainingBalance - previuosRemainingBalance + this.countMonthPayment();\r\n        return interestAmount;\r\n    }\r\n\r\n    removeTableIfExsist = () => removeTableIfExsist();\r\n    createPaymentTable = createPaymentTable.bind(this);\r\n    createLoanInfo = createLoanInfo.bind(this);\r\n}","import { config } from \"./config\";\r\nimport Loan from \"./loan\";\r\n\r\n  export function createLoanInfo(this: Loan): void {\r\n        const loanInfo = document.getElementById('loanInfo');\r\n        const ul = document.createElement('UL');\r\n        ul.setAttribute('class', 'list-group');\r\n        ul.setAttribute('id', 'calcUl');\r\n        loanInfo?.appendChild(ul);\r\n        const monthlyPayment = this.countMonthPayment();\r\n        const totalPayment = this.countTotalPayment(monthlyPayment);\r\n        const totalInterest = this.countTotalInterest(totalPayment);\r\n        createRowForLoanInfo(ul, `Deal amount: ${this.loanAmount} eur`);\r\n        createRowForLoanInfo(ul, `Deal term: ${this.loanDuration} months`);\r\n        createRowForLoanInfo(ul, `Deal interest: ${this.interest}% per year`);\r\n        createRowForLoanInfo(ul, `Monthly return payment: ${monthlyPayment.toFixed(config.decimalPlaces)} eur`);\r\n        createRowForLoanInfo(ul, `Total interest: ${totalInterest.toFixed(config.decimalPlaces)} eur`);\r\n        createRowForLoanInfo(ul, `Total payment: ${totalPayment.toFixed(config.decimalPlaces)} eur`);\r\n    }\r\n\r\nfunction  createRowForLoanInfo(ul: Element, text: string): void {\r\n        const li = document.createElement('LI');\r\n        li.setAttribute('class', 'list-group-item');\r\n        li.appendChild(document.createTextNode(`${text}`));\r\n        ul.appendChild(li);\r\n    }","import { config } from \"./config\";\r\nimport Loan from \"./loan\";\r\n\r\n export function removeTableIfExsist(): void {\r\n    if (document.getElementById('calcTable')) {\r\n        document.getElementById('calcTable')?.remove();\r\n    }\r\n    if (document.getElementById('calcUl')) {\r\n        document.getElementById('calcUl')?.remove();\r\n    }\r\n}\r\n\r\nexport function createPaymentTable(this: Loan): void {\r\n    const loanTable = document.getElementById('loanTable');\r\n    const table = document.createElement('TABLE');\r\n    table.setAttribute('id', 'calcTable');\r\n    table.setAttribute('class', 'table table-striped pt-5');\r\n    const tableHead = document.createElement('THEAD');\r\n    table.appendChild(tableHead);\r\n    const trHead = document.createElement('TR');\r\n    tableHead.appendChild(trHead);\r\n    createTdForPaymentTable(trHead, 'Payment No');\r\n    createTdForPaymentTable(trHead, 'Amount');\r\n    createTdForPaymentTable(trHead, 'Interest Payed');\r\n    const tableBody = document.createElement('TBODY');\r\n    table.appendChild(tableBody);\r\n    let previuosRemainingBalance = this.loanAmount;\r\n    for (let trNumb = 1; trNumb <= this.loanDuration; trNumb++) {\r\n        const tr = document.createElement('TR');\r\n        tableBody.appendChild(tr);\r\n        const remainingBalance = this.countRemainingBalance(trNumb);\r\n        const payedInterest = this.countInterestAmount(remainingBalance, previuosRemainingBalance);\r\n        createTdForPaymentTable(tr, `${trNumb}`);\r\n        createTdForPaymentTable(tr, `${payedInterest.toFixed(config.decimalPlaces)}`);\r\n       createTdForPaymentTable(tr, `${remainingBalance.toFixed(config.decimalPlaces)}`);\r\n        previuosRemainingBalance = remainingBalance;\r\n    }\r\n    loanTable?.appendChild(table);\r\n\r\n}\r\n\r\nfunction createTdForPaymentTable(tr: Element, text: string): void {\r\n    const td = document.createElement('TH');\r\n    td.appendChild(document.createTextNode(`${text}`));\r\n    tr.appendChild(td);\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import HousingLoan from \"./housingLoan\";\r\n\r\nconst btn = document.getElementById('btnReadHousingValues');\r\nbtn?.addEventListener(\"click\", countHousingLoan);\r\n\r\nexport function countHousingLoan() {\r\n\r\n   const loanAmount = (<HTMLInputElement>document.getElementById('loanAmount')).value;\r\n   const loanTerm = (<HTMLInputElement>document.getElementById('loanTerm')).value;\r\n   const dataHousingLoan = new HousingLoan(Number(loanAmount), Number(loanTerm));\r\n   const salary = Number((<HTMLInputElement>document.getElementById('salary')).value);\r\n   const numberOfMembers = Number((<HTMLInputElement>document.getElementById('numberOfMemebers')).value);\r\n\r\n   if (dataHousingLoan.isValid(salary, numberOfMembers)) {\r\n      const maxMonthPayment = dataHousingLoan.countMaxLoanAmount(numberOfMembers, salary);\r\n      const monthPayment = dataHousingLoan.countMonthPayment();\r\n      if (dataHousingLoan.isExpectationOk(maxMonthPayment, monthPayment)) {\r\n         dataHousingLoan.removeTableIfExsist();\r\n         dataHousingLoan.createLoanInfo();\r\n         dataHousingLoan.createPaymentTable();\r\n      }\r\n   }\r\n}\r\n","import ConsumerLoan from \"./consumerLoan\";\r\nimport { interestList } from \"./interestList\";\r\nimport { loadConsumerListBoxItems } from \"./consumerListBox\";\r\n\r\nconst btn = document.getElementById('btnConsumerLoanValues');\r\nbtn?.addEventListener(\"click\", countConsumerLoan);\r\n\r\nwindow.addEventListener('load', (evt) => {\r\n    const url: string = document.URL;\r\n    if (url.indexOf(\"consumer-loan.html\") > 0) {\r\n        loadConsumerListBoxItems();\r\n    }\r\n});\r\n\r\nexport function countConsumerLoan() {\r\n\r\n    const loanAmount = Number((<HTMLInputElement>document.getElementById('loanAmount')).value);\r\n    const loanTerm = Number((<HTMLInputElement>document.getElementById('loanTerm')).value);\r\n    const loanType = (<HTMLInputElement>document.getElementById('loanType')).value;\r\n    const dataConsumerLoan = new ConsumerLoan(loanAmount, loanTerm, interestList[loanType]);\r\n    if (dataConsumerLoan.isValid()) {\r\n        dataConsumerLoan.removeTableIfExsist();\r\n        dataConsumerLoan.createLoanInfo();\r\n        dataConsumerLoan.createPaymentTable();\r\n    }\r\n}"],"names":["btn","config","consumerLoanAmountLimit","consumerLoanDurationLimit","fastLoanAmountLimit","fastLoanDurationLimit","housingLoanDurationLimit","housingMinSalaryPerc","housingLoanPerc","fastLoanPerc","emptyField","negativeValue","monthsPerYear","totalPercentage","decimalPlaces","loanList","document","getElementById","defaultOption","createElement","key","innerHTML","appendChild","interestList","loanAmount","loanDuration","interest","isValid","undefined","this","alert","countMaxLoanAmount","numberOfMembers","salary","isExpectationOk","maxMonthPayment","monthPayment","loanSize","removeTableIfExsist","createPaymentTable","bind","createLoanInfo","percentPerMonth","power","Math","pow","countMonthPayment","countTotalPayment","countTotalInterest","totalPayment","countRemainingBalance","paymentNumber","power1","countInterestAmount","remainingBalance","previuosRemainingBalance","createRowForLoanInfo","ul","text","li","setAttribute","createTextNode","loanInfo","monthlyPayment","totalInterest","toFixed","createTdForPaymentTable","tr","td","remove","loanTable","table","tableHead","trHead","tableBody","trNumb","payedInterest","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","addEventListener","value","loanTerm","dataFastLoan","Number","dataHousingLoan","loanType","dataConsumerLoan","window","evt","URL","indexOf","loadConsumerListBoxItems"],"sourceRoot":""}